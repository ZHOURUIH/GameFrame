基础原理:ILRuntime借助Mono.Cecil库来读取DLL的PE信息，以及当中类型的所有信息，最终得到方法的IL汇编码，然后通过内置的IL解译执行虚拟机来执行DLL中的代码。

ILType:用于表示热更工程中的类型,在加载热更dll以后,就会获取dll中所有的类型,创建对应的ILType

ILMethod:用于表示热更工程中的函数,在创建ILType后,就会获取并创建该类型中所有的方法,在调用ILMethod时才会从Mono.Cecil中获取方法的IL汇编码,
		 然后根据当前汇编码和当前的栈来执行方法,在执行时会实现当前函数自己的栈,函数执行完毕后返回到调用前的栈,并且把返回值写入该方法的基址.
		 
CLR绑定:常规的使用反射调用主工程的方法,效率比较低,并且传递参数使用的object[]会产生较多的GC,所以通过CLR绑定的方式避免消耗.
		本质上是在调用一个CLR方法时,先查找是否有绑定该方法,如果有,则调用绑定的自定义方法.
		
跨域继承:当热更工程中要继承主工程中的一个类或者接口时,需要在主工程中添加该类或接口的继承适配器.
		 适配器里面会对这个类进行一次包装,把所有的虚函数和继承的接口的函数都重写一遍.
		 调用这些函数时则会在热更dll中查找函数的定义,然后根据获取到的函数的IL汇编码和当前栈帧执行该函数.
		 
值类型绑定:热更工程中直接使用主工程的值类型时会产生比较多的消耗,拆箱和装箱,所以可以通过值类型绑定的方式对用到的值类型进行重写.
		   实际上就是以重定向的方式把值类型中所有的函数重写一遍.重写的函数内部操作基本就是从栈中解析出值类型,然后进行对应的计算,计算完以后再写入栈中